{"version":3,"sources":["components/ErrorMsg.jsx","components/EditBlock.jsx","components/Block.jsx","components/PostTitle.jsx","components/Author.jsx","backend/backend.js","components/Post.jsx","components/AppMenu.jsx","components/About.jsx","components/Card.jsx","components/PostCard.jsx","components/PostsView.jsx","components/Posts.jsx","components/Login.jsx","components/Signup.jsx","components/NewPost.jsx","components/Modal.jsx","components/ErrorDlg.jsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorMsg","props","msg","react_default","a","createElement","className","EditBlock","block","submit","cancel","errors","addLinksToBlockText","type","copyBlock","JSON","parse","stringify","text","links","previousPosition","forEach","link","nextTextPiece","slice","position","push","concat","description","url","length","join","textWithLinks","_useState","useState","_useState2","Object","slicedToArray","newBlock","setNewBlock","handleChange","event","id","target","objectSpread","defineProperty","value","useEffect","onSubmit","preventDefault","output","textInput","textPieces","split","piece","index","previousPiece","indexOf","pieces","pop","separateLinksFromText","onChange","required","rows","name","language","onClick","map","error","src_components_ErrorMsg","key","Block","jsx","edit","remove","editing","setEditing","showEditing","shift","pos","filter","sort","link1","link2","firstTextPart","lastTextPart","addLinks","dangerouslySetInnerHTML","__html","prism","style","vscDarkPlus","Fragment","_id","src_components_EditBlock","PostTitle","title","_useState3","_useState4","newTitle","setNewTitle","Author","author","rest","objectWithoutProperties","username","jobTitle","bio","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","BASE_URL","getJSON","_x","_getJSON","apply","arguments","asyncToGenerator","_callee","response","json","_context","status","success","login","_x2","_x3","_login","_callee2","password","_context2","fetch","mode","headers","Content-Type","body","updatePost","_x4","_x5","_updatePost","_callee3","post","token","_context3","Authorization","updateBlock","_x6","_x7","_updateBlock","_callee4","_context4","createBlock","_x9","_x10","_createBlock","_callee6","_context6","deleteBlock","_x11","_x12","_deleteBlock","_callee7","_context7","_getPosts","_callee8","_context8","postPosts","_x13","_x14","_postPosts","_callee9","_context9","deletePosts","_x15","_x16","_deletePosts","_callee10","_context10","createUser","_x17","_createUser","_callee11","user","_context11","updateUser","_x18","_x19","_updateUser","_callee12","_context12","updatePostLikes","_x20","_x21","_updatePostLikes","_callee13","postId","userId","_context13","Post_regeneratorRuntime","Post","setPost","content","NEW_EMPTY_BLOCK","_saveBlock","newPost","t0","message","_remove","findIndex","splice","src_components_Author","src_components_PostTitle","src_components_Block","AppMenu","loginSuccess","dist","to","About","src_components_Post","Card","variant","headerTextLeft","headerTextRight","footerTextLeft","footerTextRight","children","PostCard","open","publish","like","createdAt","updatedAt","likes","admin","isAdmin","isPostLiked","src_components_Card","published","PostsView","posts","setIndex","navigate","useNavigate","postIndex","setPostIndex","getIndex","searchedPost","handleView","viewedPost","src_components_PostCard","Posts","src_components_PostsView","Login","loginState","setLoginState","logout","setEdit","userPosts","setUserPosts","newLoginState","newUserPosts","validate","htmlFor","Signup","update","deleteErrors","currentUser","setUser","fieldInput","newUser","cols","NewPost","deleteResponse","setTitle","Modal","show","header","footer","ErrorDlg","close","src_components_Modal","App_regeneratorRuntime","App","showModal","setShowModal","showErrorDlg","setShowErrorDlg","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setPosts","_useState11","_useState12","aboutPost","setAboutPost","_useState13","_useState14","postErrors","setPostErrors","_useState15","_useState16","EMPTY_RESPONSE","_useState17","_useState18","setResponse","_useState19","_useState20","publishError","setPublishError","_useState21","_useState22","signupResponse","setSignupResponse","_onSubmit","loginForm","_response","_newLoginState","localStorage","setItem","console","updateAuthorInPosts","newPosts","handleUserErrors","_submitUser","_response2","_modifyUser","_response3","removeItem","_submitTitle","_response4","toConsumableArray","_submitBlock","_callee5","blockIndex","_response5","_context5","bl","_createPost","_response6","_erasePost","_response7","togglePublish","_x8","_togglePublish","_response8","find","openErrorDlg","_toggleLike","_response9","likeIndex","openModal","closeModal","getPosts","initialLoginState","getItem","newAboutPost","basename","src_components_AppMenu","react_router_dist","path","element","modifiedPosts","components_About","src_components_Posts","ind","src_components_Login","src_components_Signup","src_components_NewPost","erasePost","components_ErrorDlg","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3212012c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ErrorMsg.css\";\n\nconst ErrorMsg = (props) => {\n  const { msg } = props;\n  return <p className=\"error-msg\">{msg}</p>;\n};\n\nexport default ErrorMsg;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./EditBlock.css\";\n\nconst EditBlock = (props) => {\n  const { block, submit, cancel } = props;\n  const { errors } = block;\n\n  function addLinksToBlockText(block) {\n    if (block.type === \"paragraph\") {\n      const copyBlock = JSON.parse(JSON.stringify(block));\n      copyBlock.text = textWithLinks(block);\n      copyBlock.links = [];\n      return copyBlock;\n    } else return block;\n  }\n\n  const [newBlock, setNewBlock] = useState(addLinksToBlockText(block));\n\n  useEffect(() => {\n    setNewBlock(addLinksToBlockText(block));\n  }, [block]);\n\n  function numberOfLines(text) {\n    return text.split(\"\\n\").length;\n  }\n\n  function textWithLinks(block) {\n    if (!block.links) return block.text;\n    const text = [];\n    let previousPosition = 0;\n    block.links.forEach((link) => {\n      const nextTextPiece = block.text.slice(previousPosition, link.position);\n      if (nextTextPiece) text.push(nextTextPiece);\n      text.push(`[${link.description}](${link.url})`);\n      previousPosition = link.position;\n    });\n    const nextTextPiece = block.text.slice(previousPosition, block.text.length);\n    if (nextTextPiece) text.push(nextTextPiece);\n    return text.join(\"\");\n  }\n\n  function separateLinksFromText(textInput) {\n    const textPieces = textInput.split(\"](\");\n    const links = [];\n    let position = 0;\n    textPieces.forEach((piece, index) => {\n      const previousPiece = textPieces[index - 1];\n      if (previousPiece && previousPiece.indexOf(\"[\") !== -1) {\n        const pieces = previousPiece.split(\"[\");\n        textPieces[index - 1] = pieces[0];\n        position += pieces[0].length;\n        links.push({ description: pieces[1] });\n      }\n      if (piece.indexOf(\")\") !== -1) {\n        const pieces = piece.split(\")\");\n        const link = links.pop();\n        if (link) {\n          link.url = pieces[0];\n          link.position = position;\n          links.push(link);\n          textPieces[index] = pieces[1];\n        }\n      }\n    });\n    return { links: links, text: textPieces.join(\"\") };\n  }\n\n  function handleChange(event) {\n    const id = event.target.id;\n    const copyBlock = {\n      ...newBlock,\n      [id]: event.target.value,\n    };\n    setNewBlock(copyBlock);\n  }\n\n  return (\n    <form\n      className=\"edit-block\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (newBlock.type === \"paragraph\") {\n          const copyBlock = JSON.parse(JSON.stringify(newBlock));\n          const output = separateLinksFromText(newBlock.text);\n          copyBlock.text = output.text;\n          copyBlock.links = output.links;\n          submit(copyBlock);\n        } else submit(newBlock);\n      }}\n    >\n      <div className=\"input-container\">\n        {block.type === \"subtitle\" && (\n          <input\n            type=\"text\"\n            value={newBlock.text}\n            onChange={handleChange}\n            id=\"text\"\n            required={true}\n            className=\"edit-block__input\"\n          />\n        )}\n        {block.type !== \"subtitle\" && (\n          <textarea\n            className=\"edit-block__textarea\"\n            rows={numberOfLines(newBlock.text)}\n            value={newBlock.text}\n            onChange={handleChange}\n            id=\"text\"\n          ></textarea>\n        )}\n        <div className=\"type-area\">\n          <select\n            name=\"type\"\n            id=\"type\"\n            value={newBlock.type}\n            onChange={handleChange}\n          >\n            <option value=\"paragraph\">Paragraph</option>\n            <option value=\"subtitle\">Subtitle</option>\n            <option value=\"code\">Code</option>\n          </select>\n          {block.type === \"code\" && (\n            <select\n              name=\"language\"\n              id=\"language\"\n              value={newBlock.language}\n              onChange={handleChange}\n            >\n              <option value=\"html\">HTML</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"javascript\">JavaScript</option>\n            </select>\n          )}\n        </div>\n      </div>\n      <div className=\"button-container\">\n        <button type=\"submit\">Submit</button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setNewBlock(block);\n            cancel();\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      <div className=\"errors-container\">\n        {errors &&\n          errors.map((error, index) => (\n            <ErrorMsg key={index} msg={error.msg} />\n          ))}\n      </div>\n    </form>\n  );\n};\n\nexport default EditBlock;\n","import React, { useState } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport EditBlock from \"./EditBlock\";\nimport \"./Block.css\";\n\nconst Block = (props) => {\n  const { block, edit, submit, remove } = props;\n  const { type, language, text, links, errors } = block;\n\n  const [editing, setEditing] = useState(false);\n\n  let jsx;\n  const showEditing = editing || (errors && errors.length !== 0);\n  switch (type) {\n    case \"paragraph\":\n      function addLinks(text, links) {\n        let shift = 0; //Shift the position from the original with the combined lengths of the insertations\n        links\n          .map((link) => {\n            return {\n              text: `<a href=\"${link.url}\">${link.description}</a>`,\n              pos: link.position,\n            };\n          })\n          .filter((link) => link.pos >= 0) //Filter out links with incorrect position to avoid unwanted behaviour\n          .sort((link1, link2) => link1.pos - link2.pos) //Sort links to increasing position to avoid unwanted behaviour\n          .forEach((link) => {\n            //Insert links in text\n            const position = link.pos + shift;\n            const firstTextPart = text.slice(0, position) + \" \";\n            const lastTextPart = \" \" + text.slice(position, text.length + 1);\n            text = firstTextPart + link.text + lastTextPart;\n            shift = shift + link.text.length + 2;\n          });\n        return text;\n      }\n      const textWithLinks = addLinks(text, links);\n      jsx = (\n        <p\n          className=\"block__p\"\n          dangerouslySetInnerHTML={{ __html: textWithLinks }}\n        ></p>\n      );\n      break;\n    case \"subtitle\":\n      jsx = <h2 className=\"block__h2\">{text}</h2>;\n      break;\n    case \"code\":\n      jsx = (\n        <div className=\"block__code\">\n          <SyntaxHighlighter language={language} style={vscDarkPlus}>\n            {text}\n          </SyntaxHighlighter>\n        </div>\n      );\n      break;\n    default:\n      jsx = <></>;\n  }\n  return (\n    <div className=\"block\">\n      {!showEditing && jsx}\n      {edit && !showEditing && (\n        <div className=\"block__edit-btns\">\n          <button\n            type=\"button\"\n            className=\"block__button\"\n            onClick={() => setEditing(true)}\n          >\n            Edit\n          </button>\n          {block._id && (\n            <button\n              type=\"button\"\n              className=\"block__button--delete\"\n              onClick={() => remove(block)}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      )}\n      {showEditing && (\n        <EditBlock\n          block={block}\n          submit={(block) => {\n            setEditing(false);\n            submit(block);\n          }}\n          cancel={() => setEditing(false)}\n          className=\"edit-block\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./PostTitle.css\";\n\nconst PostTitle = (props) => {\n  const { title, edit, submit, errors } = props;\n\n  const [editing, setEditing] = useState(errors.length !== 0);\n  const [newTitle, setNewTitle] = useState(title);\n\n  useEffect(() => {\n    setNewTitle(title);\n    setEditing(errors.length !== 0);\n  }, [title, errors]);\n\n  function handleChange(event) {\n    setNewTitle(event.target.value);\n  }\n\n  function cancel() {\n    setNewTitle(title);\n    setEditing(false);\n  }\n\n  return (\n    <div className=\"post-title\">\n      {!editing && <h1 className=\"post-title__title\">{title}</h1>}\n      {!editing && edit && (\n        <button\n          type=\"button\"\n          className=\"post-title__btn-edit\"\n          onClick={() => setEditing(true)}\n        >\n          Edit\n        </button>\n      )}\n      {editing && (\n        <>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              setEditing(false);\n              submit(newTitle);\n            }}\n            className=\"post-title__form\"\n          >\n            <input\n              type=\"text\"\n              value={newTitle}\n              onChange={handleChange}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n            {errors.length === 0 && (\n              <button type=\"button\" onClick={cancel}>\n                Cancel\n              </button>\n            )}\n            <div className=\"post-title__errors\">\n              {errors.map((error, index) => (\n                <ErrorMsg key={index} msg={error.msg} />\n              ))}\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PostTitle;\n","import React from \"react\";\nimport \"./Author.css\";\n\nconst Author = (props) => {\n  const { author, ...rest } = props;\n\n  const { username, name, jobTitle, bio } = author;\n\n  return (\n    <article {...rest}>\n      <h1>{name ? name : username}</h1>\n      <h2>{jobTitle}</h2>\n      <p>{bio}</p>\n    </article>\n  );\n};\n\nexport default Author;\n","const BASE_URL = \"https://blog-api.alexerdei.co.uk\";\n\nasync function getJSON(response) {\n  let json;\n  if (response.status === 401) {\n    json = { success: false, errors: [{ msg: \"Unauthorized\" }] };\n  } else json = await response.json();\n  return json;\n}\n\nexport async function login(username, password) {\n  const response = await fetch(`${BASE_URL}/users/login`, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport async function updatePost(post, token) {\n  const response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(post),\n  });\n  return await getJSON(response);\n}\n\nexport async function updateBlock(block, token) {\n  const response = await fetch(\n    `${BASE_URL}/posts/${block.post}/blocks/${block._id}`,\n    {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n      body: JSON.stringify(block),\n    }\n  );\n  return await getJSON(response);\n}\n\nexport async function getPost(ID) {\n  const response = await fetch(`${BASE_URL}/posts/${ID}`, {\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport async function createBlock(block, token) {\n  const response = await fetch(`${BASE_URL}/posts/${block.post}/blocks`, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(block),\n  });\n  return await getJSON(response);\n}\n\nexport async function deleteBlock(block, token) {\n  const response = await fetch(\n    `${BASE_URL}/posts/${block.post}/blocks/${block._id}`,\n    {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }\n  );\n  return await getJSON(response);\n}\n\nexport async function getPosts() {\n  const response = await fetch(`${BASE_URL}/posts`, {\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport async function postPosts(post, token) {\n  const response = await fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(post),\n  });\n  return await getJSON(response);\n}\n\nexport async function deletePosts(post, token) {\n  const response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  });\n  return await getJSON(response);\n}\n\nexport async function createUser(user) {\n  const response = await fetch(`${BASE_URL}/users`, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport async function updateUser(user, token) {\n  const response = await fetch(`${BASE_URL}/users/${user._id}`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n    body: JSON.stringify(user),\n  });\n  return await getJSON(response);\n}\n\nexport async function updatePostLikes(postId, userId) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}/likes`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ user: userId }),\n  });\n  const json = await response.json();\n  return json;\n}\n","import React, { useState } from \"react\";\nimport Block from \"./Block\";\nimport PostTitle from \"./PostTitle\";\nimport Author from \"./Author\";\nimport { createBlock, deleteBlock } from \"../backend/backend\";\nimport \"./Post.css\";\n\nconst Post = (props) => {\n  const { post, submit, updateBlock, errors, setPost, token, edit } = props;\n  const { _id, title, author, content } = post;\n\n  const NEW_EMPTY_BLOCK = {\n    text: \"New Block\",\n    type: \"paragraph\",\n    links: [],\n    language: \" \",\n    post: \"\",\n    errors: [],\n  };\n\n  const [newBlock, setNewBlock] = useState(NEW_EMPTY_BLOCK);\n\n  async function saveBlock(block) {\n    const newBlock = JSON.parse(JSON.stringify(block));\n    newBlock.post = _id;\n    const newPost = JSON.parse(JSON.stringify(post));\n    try {\n      const response = await createBlock(newBlock, token);\n      if (response.success) {\n        newPost.content.push(response.block);\n        setNewBlock(NEW_EMPTY_BLOCK);\n        newBlock.errors = [];\n      } else {\n        newBlock.errors = response.errors;\n      }\n    } catch (error) {\n      newBlock.errors = [{ msg: error.message }];\n    } finally {\n      if (newBlock.errors.length !== 0) setNewBlock(newBlock);\n      setPost(newPost);\n    }\n  }\n\n  async function remove(block) {\n    const newBlock = JSON.parse(JSON.stringify(block));\n    newBlock.post = _id;\n    const newPost = JSON.parse(JSON.stringify(post));\n    const index = newPost.content.findIndex(\n      (block) => block._id === newBlock._id\n    );\n    try {\n      const response = await deleteBlock(newBlock, token);\n      if (response.success) newPost.content.splice(index, 1);\n      else newBlock.errors = response.errors;\n    } catch (error) {\n      newBlock.errors = [{ msg: error.message }];\n    } finally {\n      if (newBlock.errors && newBlock.errors.length !== 0)\n        newPost.content[index] = newBlock;\n      setPost(newPost);\n    }\n  }\n\n  return (\n    <div className=\"post\">\n      <Author author={author} className=\"author\" />\n      <article>\n        <PostTitle title={title} edit={edit} submit={submit} errors={errors} />\n        {content.map((block) => (\n          <Block\n            key={block._id}\n            block={block}\n            edit={edit}\n            submit={updateBlock}\n            remove={remove}\n          />\n        ))}\n        {edit && (\n          <Block\n            key=\"new-block\"\n            block={newBlock}\n            edit={edit}\n            submit={saveBlock}\n          />\n        )}\n      </article>\n    </div>\n  );\n};\n\nexport default Post;\n","import \"./AppMenu.css\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst AppMenu = (props) => {\n  const LOGO = \"Alex73 DEV\";\n\n  const { loginSuccess } = props;\n\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li className=\"nav__logo\">\n          <Link to=\"/\">{LOGO}</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/post\">Post</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/signup\">{loginSuccess ? \"User\" : \"Sign Up\"}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default AppMenu;\n","import React from \"react\";\nimport Post from \"./Post\";\n\nconst About = (props) => {\n  const { post } = props;\n\n  return <Post post={post} edit={false} errors={[]} />;\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const {\n    variant,\n    headerTextLeft,\n    headerTextRight,\n    footerTextLeft,\n    footerTextRight,\n    children,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <div className={`card__header ${variant && variant}`}>\n        <div>{headerTextLeft}</div>\n        <div>{headerTextRight}</div>\n      </div>\n      {children}\n      <div className={`card__footer ${variant && `footer-${variant}`}`}>\n        <div>{footerTextLeft}</div>\n        <div>{footerTextRight}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./PostCard.css\";\n\nconst PostCard = (props) => {\n  const { post, onClick, edit, open, publish, user, like } = props;\n\n  const { title, author, createdAt, updatedAt, likes } = post;\n\n  const admin = user ? user.isAdmin : false;\n\n  const isPostLiked = user ? likes.indexOf(user._id) !== -1 : false;\n\n  return (\n    <Card\n      headerTextLeft={`By ${author.username}`}\n      headerTextRight={`Likes: ${likes.length}`}\n      footerTextLeft={`Created:${createdAt && createdAt.slice(0, 10)}`}\n      footerTextRight={`Updated:${updatedAt && updatedAt.slice(0, 10)}`}\n    >\n      <div className=\"post-card__body\">\n        <div className=\"post-card__title\">\n          <h2>{title}</h2>\n        </div>\n        <div className=\"post-card__button-container\">\n          <button className=\"post-card__button\" onClick={() => onClick(post)}>\n            View\n          </button>\n          {!edit && user && user._id && (\n            <button\n              className=\"post-card__button\"\n              onClick={() => like(post._id, user._id)}\n            >\n              {isPostLiked ? \"Unlike\" : \"Like\"}\n            </button>\n          )}\n          {edit && (\n            <button className=\"post-card__button\" onClick={() => publish(post)}>\n              {post.published ? \"Hide\" : \"Publish\"}\n            </button>\n          )}\n          {(edit || admin) && (\n            <button className=\"post-card__button--delete-lg\" onClick={open}>\n              Delete\n            </button>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React, { useState, useEffect } from \"react\";\nimport PostCard from \"./PostCard\";\nimport \"./PostsView.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PostsView = (props) => {\n  const { posts, setIndex, edit, open, publish, user, like } = props;\n\n  const navigate = useNavigate();\n\n  const [postIndex, setPostIndex] = useState(-1);\n\n  function getIndex(searchedPost) {\n    return posts.findIndex((post) => post._id === searchedPost._id);\n  }\n\n  function handleView(viewedPost) {\n    setPostIndex(getIndex(viewedPost));\n  }\n\n  useEffect(() => {\n    if (postIndex === -1) return;\n    setIndex(postIndex);\n    navigate(\"/post\");\n  }, [postIndex]);\n\n  return (\n    <div className=\"posts-view\">\n      {posts.map(\n        (post) =>\n          (post.published || edit) && (\n            <PostCard\n              key={post._id}\n              post={post}\n              onClick={handleView}\n              edit={edit}\n              open={() => {\n                setIndex(getIndex(post));\n                open();\n              }}\n              publish={publish}\n              user={user}\n              like={like}\n            />\n          )\n      )}\n    </div>\n  );\n};\n\nexport default PostsView;\n","import React from \"react\";\nimport \"./Posts.css\";\nimport PostsView from \"./PostsView\";\n\nconst Posts = (props) => {\n  const { posts, setIndex, open, user, like } = props;\n\n  return (\n    <div className=\"posts\">\n      <h1 className=\"posts__title\">Posts</h1>\n      <PostsView\n        posts={posts}\n        setIndex={setIndex}\n        open={open}\n        user={user}\n        like={like}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport PostsView from \"./PostsView\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = (props) => {\n  const {\n    submit,\n    loginState,\n    setLoginState,\n    posts,\n    logout,\n    setPostIndex,\n    setEdit,\n    open,\n    publish,\n  } = props;\n  const { user, msg } = loginState;\n\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    if (!loginState.success) return;\n    const newUserPosts = posts.filter(\n      (post) => post.author.username === loginState.user.username\n    );\n    setUserPosts(newUserPosts);\n  }, [loginState, posts]);\n\n  function handleChange(event) {\n    const name = event.target.id;\n    const newLoginState = JSON.parse(JSON.stringify(loginState));\n    newLoginState.user[name] = event.target.value;\n    setLoginState(newLoginState);\n  }\n\n  let jsx;\n  if (loginState.success) {\n    jsx = (\n      <div className=\"logout\">\n        <h1 className=\"logout__title\">Welcome {user.username}!</h1>\n        <PostsView\n          posts={userPosts}\n          setIndex={(index) => {\n            const postIndex = posts.findIndex(\n              (post) => post._id === userPosts[index]._id\n            );\n            setPostIndex(postIndex);\n            setEdit(true);\n          }}\n          edit={true}\n          open={open}\n          publish={publish}\n        />\n\n        <Link to=\"/new-post\" className=\"logout__button--link\">\n          New Post\n        </Link>\n\n        <p>You are currently logged in.</p>\n        <button type=\"button\" onClick={logout} className=\"logout__button\">\n          Logout\n        </button>\n      </div>\n    );\n  } else\n    jsx = (\n      <form\n        className=\"login\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          submit(loginState.user);\n        }}\n        validate=\"true\"\n      >\n        <h1 className=\"login__title\">Login</h1>\n        <label htmlFor=\"username\">Username*</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"login__username\"\n          onChange={handleChange}\n          value={user.username}\n          required\n        />\n        <label htmlFor=\"password\">Password*</label>\n        <input\n          type=\"text\"\n          id=\"password\"\n          className=\"login__password\"\n          onChange={handleChange}\n          value={user.password}\n          required\n        />\n        <button type=\"submit\" className=\"login__button\">\n          Login\n        </button>\n        {msg && <ErrorMsg msg={msg} />}\n      </form>\n    );\n  return jsx;\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./Signup.css\";\n\nconst Signup = (props) => {\n\tconst { loginState, submit, update, response, deleteErrors } = props;\n\n\tconst { user: currentUser, success: loginSuccess } = loginState;\n\tconst { success, errors } = response;\n\n\tconst [user, setUser] = useState(currentUser);\n\n\tuseEffect(() => {\n\t\treturn () => deleteErrors();\n\t}, []);\n\n\tconst navigate = useNavigate();\n\n\tuseEffect(() => {\n\t\tif (!success) return;\n\t\tnavigate(\"/login\");\n\t}, [success]);\n\n\tfunction handleChange(event) {\n\t\tconst fieldInput = event.target;\n\t\tconst newUser = {\n\t\t\t...user,\n\t\t\t[fieldInput.id]: fieldInput.value,\n\t\t};\n\t\tsetUser(newUser);\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tclassName=\"signup\"\n\t\t\tonSubmit={(event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tloginSuccess ? update(user) : submit(user);\n\t\t\t}}\n\t\t\tvalidate=\"true\">\n\t\t\t<h1 className=\"signup__title\">\n\t\t\t\t{loginSuccess ? \"Update User\" : \"Sign Up\"}\n\t\t\t</h1>\n\t\t\t<label htmlFor=\"username\">Username*</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"username\"\n\t\t\t\tclassName=\"signup__username\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={user.username}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t{!loginSuccess && <label htmlFor=\"password\">Password*</label>}\n\t\t\t{!loginSuccess && (\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tclassName=\"signup__password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={user.password}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"name\"\n\t\t\t\tclassName=\"signup__name\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={user.name}\n\t\t\t/>\n\t\t\t<label htmlFor=\"jobTitle\">Job Title</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"jobTitle\"\n\t\t\t\tclassName=\"signup__job-title\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={user.jobTitle}\n\t\t\t/>\n\t\t\t<label htmlFor=\"bio\">Bio</label>\n\t\t\t<textarea\n\t\t\t\tname=\"bio\"\n\t\t\t\tid=\"bio\"\n\t\t\t\tcols=\"30\"\n\t\t\t\trows=\"10\"\n\t\t\t\tclassName=\"submit_bio\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={user.bio}\n\t\t\t/>\n\t\t\t<button type=\"submit\" className=\"signup__button\">\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t\t{errors &&\n\t\t\t\terrors.length !== 0 &&\n\t\t\t\terrors.map((error, index) => <ErrorMsg msg={error.msg} key={index} />)}\n\t\t</form>\n\t);\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./NewPost.css\";\n\nconst NewPost = (props) => {\n  const { submit, response, deleteResponse } = props;\n  const { post, errors } = response;\n\n  const [title, setTitle] = useState(post.title);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (response.success) {\n      deleteResponse();\n      navigate(\"/login\");\n    } else {\n      setTitle(response.post.title);\n    }\n  }, [response]);\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function submitForm(event) {\n    event.preventDefault();\n    submit({ title: title });\n  }\n\n  return (\n    <form onSubmit={submitForm} className=\"new-post\">\n      <h1 className=\"new-post__title\">New Post</h1>\n      <label htmlFor=\"title\">Title*</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        required\n        onChange={handleTitleChange}\n        value={title}\n      />\n      <button type=\"submit\">Submit</button>\n      {errors.length > 0 && <ErrorMsg msg={errors[0].msg} />}\n    </form>\n  );\n};\n\nexport default NewPost;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./Modal.css\";\n\nconst Modal = (props) => {\n  const { show, variant, header, footer, children } = props;\n\n  return (\n    <div className={`modal ${show && \"show\"}`}>\n      <Card variant={variant} headerTextLeft={header} footerTextLeft={footer}>\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"./Modal\";\nimport ErrorMsg from \"./ErrorMsg\";\n\nconst ErrorDlg = (props) => {\n\tconst { open, close, error } = props;\n\n\treturn (\n\t\t<Modal\n\t\t\tvariant=\"danger\"\n\t\t\theader=\"Error!\"\n\t\t\tfooter=\"Sorry, but it happens sometimes\"\n\t\t\tshow={open}>\n\t\t\t<div className=\"modal-body\">\n\t\t\t\t<ErrorMsg msg={error.msg} />\n\t\t\t\t<div className=\"modal-body__button-container\">\n\t\t\t\t\t<button className=\"modal-body__button\" onClick={close}>\n\t\t\t\t\t\tOK\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n\nexport default ErrorDlg;\n","import React from \"react\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Post from \"./components/Post\";\nimport AppMenu from \"./components/AppMenu\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Posts from \"./components/Posts\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport NewPost from \"./components/NewPost\";\nimport Modal from \"./components/Modal\";\nimport ErrorMsg from \"./components/ErrorMsg\";\nimport {\n\tlogin,\n\tupdatePost,\n\tupdateBlock,\n\tgetPosts,\n\tpostPosts,\n\tdeletePosts,\n\tcreateUser,\n\tupdateUser,\n\tupdatePostLikes,\n} from \"./backend/backend\";\nimport ErrorDlg from \"./components/ErrorDlg\";\n\nfunction App() {\n\tconst ABOUT_ID = \"64b3b9fc11a583b26b48b476\";\n\n\tconst [showModal, setShowModal] = useState(false);\n\n\tconst [showErrorDlg, setShowErrorDlg] = useState(false);\n\n\tconst [index, setIndex] = useState(0);\n\n\tconst [edit, setEdit] = useState(false);\n\n\tconst [posts, setPosts] = useState([\n\t\t{\n\t\t\ttitle: \"...Loading\",\n\t\t\tauthor: {\n\t\t\t\tusername: \"...Loading\",\n\t\t\t},\n\t\t\tcontent: [],\n\t\t},\n\t]);\n\n\tconst [aboutPost, setAboutPost] = useState({\n\t\ttitle: \"...Loading\",\n\t\tauthor: {\n\t\t\tusername: \"...Loading\",\n\t\t},\n\t\tcontent: [],\n\t});\n\n\tconst [postErrors, setPostErrors] = useState([]);\n\n\tconst [loginState, setLoginState] = useState({\n\t\tsuccess: false,\n\t\tuser: {\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\",\n\t\t\tisAdmin: false,\n\t\t\tname: \"\",\n\t\t\tjobTitle: \"\",\n\t\t\tbio: \"\",\n\t\t},\n\t\ttoken: \"\",\n\t\tmsg: \"\",\n\t});\n\n\tconst EMPTY_RESPONSE = {\n\t\tsuccess: false,\n\t\ttype: \"POST\",\n\t\tpost: {\n\t\t\tauthor: \"\",\n\t\t\ttitle: \"\",\n\t\t},\n\t\terrors: [],\n\t};\n\n\tconst [response, setResponse] = useState(EMPTY_RESPONSE);\n\n\tconst [publishError, setPublishError] = useState({ msg: \"\" });\n\n\tconst [signupResponse, setSignupResponse] = useState({\n\t\tsuccess: false,\n\t\terrors: [],\n\t});\n\n\tuseEffect(() => {\n\t\tgetPosts()\n\t\t\t.then((response) => {\n\t\t\t\tsetPosts(response.posts);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t\topenErrorDlg({ msg: error.message });\n\t\t\t});\n\t\t//get loginState from localStorage\n\t\tconst initialLoginState = JSON.parse(localStorage.getItem(\"loginState\"));\n\t\tif (initialLoginState) setLoginState(initialLoginState);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst { success, type, post, errors } = response;\n\t\tif (post.author === \"\" && post.title === \"\" && errors.length === 0) return;\n\t\tif (type === \"POST\" && success) {\n\t\t\tconst newPosts = JSON.parse(JSON.stringify(posts));\n\t\t\tpost.author = { ...loginState.user };\n\t\t\tnewPosts.push(post);\n\t\t\tsetPosts(newPosts);\n\t\t\tsetIndex(newPosts.length - 1);\n\t\t}\n\t\tif (type === \"DELETE\" && success) {\n\t\t\tconst newPosts = JSON.parse(JSON.stringify(posts));\n\t\t\tnewPosts.splice(index, 1);\n\t\t\tsetPosts(newPosts);\n\t\t\tsetIndex(newPosts.findIndex((post) => post._id === ABOUT_ID));\n\t\t\tdeleteResponse();\n\t\t\tcloseModal();\n\t\t}\n\t}, [response]);\n\n\tuseEffect(() => {\n\t\tconst newAboutPost = posts.find((post) => post._id === ABOUT_ID);\n\t\tif (!newAboutPost) return;\n\t\tsetAboutPost(newAboutPost);\n\t}, [posts]);\n\n\tuseEffect(() => {\n\t\tsetIndex(posts.findIndex((post) => post._id === aboutPost._id));\n\t}, [aboutPost]);\n\n\tasync function onSubmit(loginForm) {\n\t\tconst { username, password } = loginForm;\n\t\ttry {\n\t\t\tconst response = await login(username, password);\n\t\t\tconst newLoginState = JSON.parse(JSON.stringify(loginState));\n\t\t\tnewLoginState.success = response.success;\n\t\t\tnewLoginState.msg = response.msg;\n\t\t\tnewLoginState.token = response.token;\n\t\t\tif (response.success) {\n\t\t\t\t//user logged in successfully\n\t\t\t\tnewLoginState.user = { ...response.user };\n\t\t\t\tnewLoginState.user.password = \"\"; //Do not store password as it is sensitive information!!!\n\t\t\t\t//Store newLoginState, which contains the token, in localStorage\n\t\t\t\tlocalStorage.setItem(\"loginState\", JSON.stringify(newLoginState));\n\t\t\t}\n\t\t\tsetLoginState(newLoginState);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tconst newLoginState = { ...loginState };\n\t\t\tnewLoginState.msg = error.message;\n\t\t\tsetLoginState(newLoginState);\n\t\t}\n\t}\n\n\tfunction updateAuthorInPosts(author) {\n\t\tconst newPosts = JSON.parse(JSON.stringify(posts));\n\t\tnewPosts.forEach((post) => {\n\t\t\tif (post.author._id === author._id) post.author = author;\n\t\t});\n\t\tsetPosts(newPosts);\n\t}\n\n\tfunction handleUserErrors(user, errors) {\n\t\tuser._id = \"\";\n\t\tuser.isAdmin = false;\n\t\tsetLoginState({\n\t\t\tsuccess: false,\n\t\t\tuser,\n\t\t\terrors: [],\n\t\t});\n\t\tsetSignupResponse({\n\t\t\tsuccess: false,\n\t\t\terrors,\n\t\t});\n\t}\n\n\tasync function submitUser(user) {\n\t\ttry {\n\t\t\tconst response = await createUser(user);\n\t\t\tlogout();\n\t\t\tif (!response.success) {\n\t\t\t\thandleUserErrors(user, response.errors);\n\t\t\t} else {\n\t\t\t\tsetSignupResponse(response);\n\t\t\t\tonSubmit(user);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\thandleUserErrors(user, [{ msg: error.message }]);\n\t\t}\n\t}\n\n\tasync function modifyUser(user) {\n\t\ttry {\n\t\t\tconst response = await updateUser(user, loginState.token);\n\t\t\tsetSignupResponse(response);\n\t\t\tif (response.success) {\n\t\t\t\tupdateAuthorInPosts(user);\n\t\t\t\tconst newLoginState = JSON.parse(JSON.stringify(loginState));\n\t\t\t\tnewLoginState.user = user;\n\t\t\t\tsetLoginState(newLoginState);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetSignupResponse({\n\t\t\t\tsuccess: false,\n\t\t\t\terrors: [{ msg: error.message }],\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction logout() {\n\t\tconst newLoginState = {\n\t\t\tsuccess: false,\n\t\t\tuser: {\n\t\t\t\t_id: \"\",\n\t\t\t\tusername: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t},\n\t\t\ttoken: \"\",\n\t\t\tmsg: \"\",\n\t\t};\n\t\tlocalStorage.removeItem(\"loginState\");\n\t\tsetLoginState(newLoginState);\n\t}\n\n\tasync function submitTitle(title) {\n\t\tconst newPosts = [...posts];\n\t\tconst newPost = { ...newPosts[index] };\n\t\tnewPost.title = title;\n\t\tnewPosts[index] = newPost;\n\t\tsetPosts(newPosts);\n\t\ttry {\n\t\t\tconst response = await updatePost(newPost, loginState.token);\n\t\t\tsetPostErrors(response.errors);\n\t\t} catch (error) {\n\t\t\tsetPostErrors([{ msg: error.message }]);\n\t\t}\n\t}\n\n\tasync function submitBlock(block) {\n\t\tconst newPosts = JSON.parse(JSON.stringify(posts));\n\t\tconst newPost = { ...newPosts[index] };\n\t\tconst blockIndex = newPost.content.findIndex((bl) => bl._id === block._id);\n\t\tnewPost.content[blockIndex] = { ...block };\n\t\ttry {\n\t\t\tconst response = await updateBlock(block, loginState.token);\n\t\t\tnewPost.content[blockIndex].errors = response.errors;\n\t\t} catch (error) {\n\t\t\tnewPost.content[blockIndex].errors = [{ msg: error.message }];\n\t\t} finally {\n\t\t\tsetPosts(newPosts);\n\t\t}\n\t}\n\n\tasync function createPost(post) {\n\t\tpost.author = loginState.user._id;\n\t\ttry {\n\t\t\tconst response = await postPosts(post, loginState.token);\n\t\t\t// The next line will deal with unauthorized access when response do not have post\n\t\t\tif (!response.post) response.post = post;\n\t\t\tsetResponse({\n\t\t\t\t...response,\n\t\t\t\ttype: \"POST\",\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tsetResponse({\n\t\t\t\tsuccess: false,\n\t\t\t\ttype: \"POST\",\n\t\t\t\tpost,\n\t\t\t\terrors: [{ msg: error.message }],\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function erasePost(post) {\n\t\ttry {\n\t\t\tconst response = await deletePosts(post, loginState.token);\n\t\t\tsetResponse({\n\t\t\t\t...response,\n\t\t\t\tpost,\n\t\t\t\ttype: \"DELETE\",\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tsetResponse({\n\t\t\t\tsuccess: false,\n\t\t\t\ttype: \"DELETE\",\n\t\t\t\tpost,\n\t\t\t\terrors: [{ msg: error.message }],\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function togglePublish(post) {\n\t\tpost.published = !post.published;\n\t\ttry {\n\t\t\tconst response = await updatePost(post, loginState.token);\n\t\t\tif (response.success) {\n\t\t\t\tconst newPosts = JSON.parse(JSON.stringify(posts));\n\t\t\t\tconst newPost = newPosts.find((newPost) => newPost._id === post._id);\n\t\t\t\tnewPost.published = post.published;\n\t\t\t\tsetPosts(newPosts);\n\t\t\t} else {\n\t\t\t\tthrow new Error(response.errors[0].msg);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\topenErrorDlg({ msg: error.message });\n\t\t}\n\t}\n\n\tasync function toggleLike(postId, userId) {\n\t\ttry {\n\t\t\tconst response = await updatePostLikes(postId, userId);\n\t\t\tif (response.success) {\n\t\t\t\tconst newPosts = JSON.parse(JSON.stringify(posts));\n\t\t\t\tconst newPost = newPosts.find((newPost) => newPost._id === postId);\n\t\t\t\tconst likeIndex = newPost.likes.indexOf(userId);\n\t\t\t\tconst isPostLiked = likeIndex !== -1;\n\t\t\t\tif (!isPostLiked) newPost.likes.push(userId);\n\t\t\t\telse newPost.likes.splice(likeIndex, 1);\n\t\t\t\tsetPosts(newPosts);\n\t\t\t} else {\n\t\t\t\tthrow new Error(response.errors[0].msg);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\topenErrorDlg({ msg: error.message });\n\t\t}\n\t}\n\n\tfunction deleteResponse() {\n\t\tsetResponse(EMPTY_RESPONSE);\n\t}\n\n\tfunction deleteErrors() {\n\t\tsetSignupResponse({\n\t\t\tsuccess: false,\n\t\t\terrors: [],\n\t\t});\n\t}\n\n\tfunction openModal() {\n\t\tsetShowModal(true);\n\t}\n\n\tfunction closeModal() {\n\t\tsetShowModal(false);\n\t}\n\n\tfunction openErrorDlg(error) {\n\t\tsetPublishError(error);\n\t\tsetShowErrorDlg(true);\n\t}\n\n\tfunction closeErrorDlg() {\n\t\tsetPublishError({ msg: \"\" });\n\t\tsetShowErrorDlg(false);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router basename=\"/my-dev-website\">\n\t\t\t\t<AppMenu loginSuccess={loginState.success} />\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/post\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\tpost={posts[index]}\n\t\t\t\t\t\t\t\tsubmit={submitTitle}\n\t\t\t\t\t\t\t\tupdateBlock={submitBlock}\n\t\t\t\t\t\t\t\terrors={postErrors}\n\t\t\t\t\t\t\t\tsetPost={(newPost) => {\n\t\t\t\t\t\t\t\t\tconst modifiedPosts = [...posts];\n\t\t\t\t\t\t\t\t\tmodifiedPosts[index] = newPost;\n\t\t\t\t\t\t\t\t\tsetPosts(modifiedPosts);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ttoken={loginState.token}\n\t\t\t\t\t\t\t\tedit={\n\t\t\t\t\t\t\t\t\tedit &&\n\t\t\t\t\t\t\t\t\tloginState.user.username === posts[index].author.username\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/about\" element={<About post={aboutPost} />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Posts\n\t\t\t\t\t\t\t\tposts={posts}\n\t\t\t\t\t\t\t\tsetIndex={(ind) => {\n\t\t\t\t\t\t\t\t\tsetIndex(ind);\n\t\t\t\t\t\t\t\t\tsetEdit(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tuser={loginState.user}\n\t\t\t\t\t\t\t\topen={openModal}\n\t\t\t\t\t\t\t\tpublish={togglePublish}\n\t\t\t\t\t\t\t\tlike={toggleLike}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\tsubmit={onSubmit}\n\t\t\t\t\t\t\t\tloginState={loginState}\n\t\t\t\t\t\t\t\tsetLoginState={setLoginState}\n\t\t\t\t\t\t\t\tlogout={logout}\n\t\t\t\t\t\t\t\tposts={posts}\n\t\t\t\t\t\t\t\tsetPostIndex={setIndex}\n\t\t\t\t\t\t\t\tsetEdit={setEdit}\n\t\t\t\t\t\t\t\topen={openModal}\n\t\t\t\t\t\t\t\tpublish={togglePublish}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/signup\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Signup\n\t\t\t\t\t\t\t\tloginState={loginState}\n\t\t\t\t\t\t\t\tsubmit={submitUser}\n\t\t\t\t\t\t\t\tupdate={modifyUser}\n\t\t\t\t\t\t\t\tresponse={signupResponse}\n\t\t\t\t\t\t\t\tdeleteErrors={deleteErrors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/new-post\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<NewPost\n\t\t\t\t\t\t\t\tsubmit={createPost}\n\t\t\t\t\t\t\t\tresponse={response}\n\t\t\t\t\t\t\t\tdeleteResponse={deleteResponse}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Routes>\n\t\t\t</Router>\n\n\t\t\t<Modal\n\t\t\t\tshow={showModal}\n\t\t\t\tvariant=\"danger\"\n\t\t\t\theader=\"Danger!\"\n\t\t\t\tfooter=\"Permanent data loss\">\n\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t{response.errors.length === 0 && (\n\t\t\t\t\t\t<p>You are going to delete the post permanently. Are you sure?</p>\n\t\t\t\t\t)}\n\t\t\t\t\t{response.errors.length !== 0 && (\n\t\t\t\t\t\t<ErrorMsg msg={response.errors[0].msg} />\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"modal-body__button-container\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => erasePost(posts[index])}\n\t\t\t\t\t\t\tclassName=\"modal-body__button--delete\">\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdeleteResponse();\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"modal-body__button\">\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\n\t\t\t<ErrorDlg\n\t\t\t\topen={showErrorDlg}\n\t\t\t\tclose={closeErrorDlg}\n\t\t\t\terror={publishError}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}