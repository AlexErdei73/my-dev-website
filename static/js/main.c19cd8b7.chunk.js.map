{"version":3,"sources":["components/ErrorMsg.jsx","components/EditBlock.jsx","components/Block.jsx","components/PostTitle.jsx","components/Author.jsx","backend/backend.js","components/Post.jsx","components/AppMenu.jsx","components/About.jsx","components/Card.jsx","components/PostCard.jsx","components/PostsView.jsx","components/Posts.jsx","components/Login.jsx","components/Signup.jsx","components/NewPost.jsx","components/Modal.jsx","components/ErrorDlg.jsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorMsg","props","msg","react_default","a","createElement","className","EditBlock","block","submit","cancel","errors","addLinksToBlockText","type","copyBlock","JSON","parse","stringify","text","links","previousPosition","forEach","link","nextTextPiece","slice","position","push","concat","description","url","length","join","textWithLinks","_useState","useState","_useState2","Object","slicedToArray","newBlock","setNewBlock","handleChange","event","id","target","objectSpread","defineProperty","value","useEffect","onSubmit","preventDefault","output","textInput","textPieces","split","piece","index","previousPiece","indexOf","pieces","pop","separateLinksFromText","onChange","required","rows","name","language","onClick","map","error","src_components_ErrorMsg","key","Block","jsx","edit","remove","editing","setEditing","showEditing","shift","pos","filter","sort","link1","link2","firstTextPart","lastTextPart","addLinks","dangerouslySetInnerHTML","__html","prism","style","vscDarkPlus","Fragment","_id","src_components_EditBlock","PostTitle","title","_useState3","_useState4","newTitle","setNewTitle","Author","author","rest","objectWithoutProperties","username","jobTitle","bio","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","BASE_URL","getJSON","_x","_getJSON","apply","arguments","asyncToGenerator","_callee","response","json","_context","status","success","statusText","login","_x2","_x3","_login","_callee2","password","_context2","fetch","mode","headers","Content-Type","body","updatePost","_x4","_x5","_updatePost","_callee3","post","token","_context3","Authorization","updateBlock","_x6","_x7","_updateBlock","_callee4","_context4","createBlock","_x9","_x10","_createBlock","_callee6","_context6","deleteBlock","_x11","_x12","_deleteBlock","_callee7","_context7","_getPosts","_callee8","_context8","postPosts","_x13","_x14","_postPosts","_callee9","_context9","deletePosts","_x15","_x16","_deletePosts","_callee10","_context10","createUser","_x17","_createUser","_callee11","user","_context11","updateUser","_x18","_x19","_updateUser","_callee12","_context12","updatePostLikes","_x20","_x21","_updatePostLikes","_callee13","postId","userId","_context13","Post_regeneratorRuntime","Post","setPost","content","NEW_EMPTY_BLOCK","_saveBlock","newPost","t0","message","_remove","findIndex","splice","src_components_Author","src_components_PostTitle","src_components_Block","AppMenu","loginSuccess","dist","to","About","src_components_Post","Card","variant","headerTextLeft","headerTextRight","footerTextLeft","footerTextRight","children","PostCard","open","publish","like","createdAt","updatedAt","likes","admin","isAdmin","isPostLiked","src_components_Card","published","PostsView","posts","setIndex","navigate","useNavigate","postIndex","setPostIndex","getIndex","searchedPost","handleView","viewedPost","src_components_PostCard","Posts","src_components_PostsView","Login","loginState","setLoginState","logout","setEdit","userPosts","setUserPosts","newLoginState","newUserPosts","validate","htmlFor","Signup","update","deleteErrors","currentUser","setUser","fieldInput","newUser","cols","NewPost","deleteResponse","setTitle","Modal","show","header","footer","ErrorDlg","close","src_components_Modal","App_regeneratorRuntime","App","showModal","setShowModal","showErrorDlg","setShowErrorDlg","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setPosts","_useState11","_useState12","aboutPost","setAboutPost","_useState13","_useState14","postErrors","setPostErrors","_useState15","_useState16","EMPTY_RESPONSE","_useState17","_useState18","setResponse","_useState19","_useState20","publishError","setPublishError","_useState21","_useState22","signupResponse","setSignupResponse","_onSubmit","loginForm","_response","_newLoginState","localStorage","setItem","console","updateAuthorInPosts","newPosts","handleUserErrors","_submitUser","_response2","_modifyUser","_response3","removeItem","_submitTitle","_response4","toConsumableArray","_submitBlock","_callee5","blockIndex","_response5","_context5","bl","_createPost","_response6","_erasePost","_response7","togglePublish","_x8","_togglePublish","_response8","find","openErrorDlg","_toggleLike","_response9","likeIndex","openModal","closeModal","getPosts","initialLoginState","getItem","newAboutPost","src_components_AppMenu","react_router_dist","path","element","modifiedPosts","components_About","src_components_Posts","ind","src_components_Login","src_components_Signup","src_components_NewPost","erasePost","components_ErrorDlg","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c19cd8b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ErrorMsg.css\";\n\nconst ErrorMsg = (props) => {\n  const { msg } = props;\n  return <p className=\"error-msg\">{msg}</p>;\n};\n\nexport default ErrorMsg;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./EditBlock.css\";\n\nconst EditBlock = (props) => {\n  const { block, submit, cancel } = props;\n  const { errors } = block;\n\n  function addLinksToBlockText(block) {\n    if (block.type === \"paragraph\") {\n      const copyBlock = JSON.parse(JSON.stringify(block));\n      copyBlock.text = textWithLinks(block);\n      copyBlock.links = [];\n      return copyBlock;\n    } else return block;\n  }\n\n  const [newBlock, setNewBlock] = useState(addLinksToBlockText(block));\n\n  useEffect(() => {\n    setNewBlock(addLinksToBlockText(block));\n  }, [block]);\n\n  function numberOfLines(text) {\n    return text.split(\"\\n\").length;\n  }\n\n  function textWithLinks(block) {\n    if (!block.links) return block.text;\n    const text = [];\n    let previousPosition = 0;\n    block.links.forEach((link) => {\n      const nextTextPiece = block.text.slice(previousPosition, link.position);\n      if (nextTextPiece) text.push(nextTextPiece);\n      text.push(`[${link.description}](${link.url})`);\n      previousPosition = link.position;\n    });\n    const nextTextPiece = block.text.slice(previousPosition, block.text.length);\n    if (nextTextPiece) text.push(nextTextPiece);\n    return text.join(\"\");\n  }\n\n  function separateLinksFromText(textInput) {\n    const textPieces = textInput.split(\"](\");\n    const links = [];\n    let position = 0;\n    textPieces.forEach((piece, index) => {\n      const previousPiece = textPieces[index - 1];\n      if (previousPiece && previousPiece.indexOf(\"[\") !== -1) {\n        const pieces = previousPiece.split(\"[\");\n        textPieces[index - 1] = pieces[0];\n        position += pieces[0].length;\n        links.push({ description: pieces[1] });\n      }\n      if (piece.indexOf(\")\") !== -1) {\n        const pieces = piece.split(\")\");\n        const link = links.pop();\n        if (link) {\n          link.url = pieces[0];\n          link.position = position;\n          links.push(link);\n          textPieces[index] = pieces[1];\n        }\n      }\n    });\n    return { links: links, text: textPieces.join(\"\") };\n  }\n\n  function handleChange(event) {\n    const id = event.target.id;\n    const copyBlock = {\n      ...newBlock,\n      [id]: event.target.value,\n    };\n    setNewBlock(copyBlock);\n  }\n\n  return (\n    <form\n      className=\"edit-block\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (newBlock.type === \"paragraph\") {\n          const copyBlock = JSON.parse(JSON.stringify(newBlock));\n          const output = separateLinksFromText(newBlock.text);\n          copyBlock.text = output.text;\n          copyBlock.links = output.links;\n          submit(copyBlock);\n        } else submit(newBlock);\n      }}\n    >\n      <div className=\"input-container\">\n        {block.type === \"subtitle\" && (\n          <input\n            type=\"text\"\n            value={newBlock.text}\n            onChange={handleChange}\n            id=\"text\"\n            required={true}\n            className=\"edit-block__input\"\n          />\n        )}\n        {block.type !== \"subtitle\" && (\n          <textarea\n            className=\"edit-block__textarea\"\n            rows={numberOfLines(newBlock.text)}\n            value={newBlock.text}\n            onChange={handleChange}\n            id=\"text\"\n          ></textarea>\n        )}\n        <div className=\"type-area\">\n          <select\n            name=\"type\"\n            id=\"type\"\n            value={newBlock.type}\n            onChange={handleChange}\n          >\n            <option value=\"paragraph\">Paragraph</option>\n            <option value=\"subtitle\">Subtitle</option>\n            <option value=\"code\">Code</option>\n          </select>\n          {block.type === \"code\" && (\n            <select\n              name=\"language\"\n              id=\"language\"\n              value={newBlock.language}\n              onChange={handleChange}\n            >\n              <option value=\"html\">HTML</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"javascript\">JavaScript</option>\n            </select>\n          )}\n        </div>\n      </div>\n      <div className=\"button-container\">\n        <button type=\"submit\">Submit</button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setNewBlock(block);\n            cancel();\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      <div className=\"errors-container\">\n        {errors &&\n          errors.map((error, index) => (\n            <ErrorMsg key={index} msg={error.msg} />\n          ))}\n      </div>\n    </form>\n  );\n};\n\nexport default EditBlock;\n","import React, { useState } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport EditBlock from \"./EditBlock\";\nimport \"./Block.css\";\n\nconst Block = (props) => {\n  const { block, edit, submit, remove } = props;\n  const { type, language, text, links, errors } = block;\n\n  const [editing, setEditing] = useState(false);\n\n  let jsx;\n  const showEditing = editing || (errors && errors.length !== 0);\n  switch (type) {\n    case \"paragraph\":\n      function addLinks(text, links) {\n        let shift = 0; //Shift the position from the original with the combined lengths of the insertations\n        links\n          .map((link) => {\n            return {\n              text: `<a href=\"${link.url}\">${link.description}</a>`,\n              pos: link.position,\n            };\n          })\n          .filter((link) => link.pos >= 0) //Filter out links with incorrect position to avoid unwanted behaviour\n          .sort((link1, link2) => link1.pos - link2.pos) //Sort links to increasing position to avoid unwanted behaviour\n          .forEach((link) => {\n            //Insert links in text\n            const position = link.pos + shift;\n            const firstTextPart = text.slice(0, position) + \" \";\n            const lastTextPart = \" \" + text.slice(position, text.length + 1);\n            text = firstTextPart + link.text + lastTextPart;\n            shift = shift + link.text.length + 2;\n          });\n        return text;\n      }\n      const textWithLinks = addLinks(text, links);\n      jsx = (\n        <p\n          className=\"block__p\"\n          dangerouslySetInnerHTML={{ __html: textWithLinks }}\n        ></p>\n      );\n      break;\n    case \"subtitle\":\n      jsx = <h2 className=\"block__h2\">{text}</h2>;\n      break;\n    case \"code\":\n      jsx = (\n        <div className=\"block__code\">\n          <SyntaxHighlighter language={language} style={vscDarkPlus}>\n            {text}\n          </SyntaxHighlighter>\n        </div>\n      );\n      break;\n    default:\n      jsx = <></>;\n  }\n  return (\n    <div className=\"block\">\n      {!showEditing && jsx}\n      {edit && !showEditing && (\n        <div className=\"block__edit-btns\">\n          <button\n            type=\"button\"\n            className=\"block__button\"\n            onClick={() => setEditing(true)}\n          >\n            Edit\n          </button>\n          {block._id && (\n            <button\n              type=\"button\"\n              className=\"block__button--delete\"\n              onClick={() => remove(block)}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      )}\n      {showEditing && (\n        <EditBlock\n          block={block}\n          submit={(block) => {\n            setEditing(false);\n            submit(block);\n          }}\n          cancel={() => setEditing(false)}\n          className=\"edit-block\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./PostTitle.css\";\n\nconst PostTitle = (props) => {\n  const { title, edit, submit, errors } = props;\n\n  const [editing, setEditing] = useState(errors.length !== 0);\n  const [newTitle, setNewTitle] = useState(title);\n\n  useEffect(() => {\n    setNewTitle(title);\n    setEditing(errors.length !== 0);\n  }, [title, errors]);\n\n  function handleChange(event) {\n    setNewTitle(event.target.value);\n  }\n\n  function cancel() {\n    setNewTitle(title);\n    setEditing(false);\n  }\n\n  return (\n    <div className=\"post-title\">\n      {!editing && <h1 className=\"post-title__title\">{title}</h1>}\n      {!editing && edit && (\n        <button\n          type=\"button\"\n          className=\"post-title__btn-edit\"\n          onClick={() => setEditing(true)}\n        >\n          Edit\n        </button>\n      )}\n      {editing && (\n        <>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              setEditing(false);\n              submit(newTitle);\n            }}\n            className=\"post-title__form\"\n          >\n            <input\n              type=\"text\"\n              value={newTitle}\n              onChange={handleChange}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n            {errors.length === 0 && (\n              <button type=\"button\" onClick={cancel}>\n                Cancel\n              </button>\n            )}\n            <div className=\"post-title__errors\">\n              {errors.map((error, index) => (\n                <ErrorMsg key={index} msg={error.msg} />\n              ))}\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PostTitle;\n","import React from \"react\";\nimport \"./Author.css\";\n\nconst Author = (props) => {\n  const { author, ...rest } = props;\n\n  const { username, name, jobTitle, bio } = author;\n\n  return (\n    <article {...rest}>\n      <h1>{name ? name : username}</h1>\n      <h2>{jobTitle}</h2>\n      <p>{bio}</p>\n    </article>\n  );\n};\n\nexport default Author;\n","const BASE_URL = \"https://radiant-crag-39178.herokuapp.com\";\n\nasync function getJSON(response) {\n\tlet json;\n\tif (response.status === 401) {\n\t\tjson = { success: false, errors: [{ msg: response.statusText }] };\n\t} else json = await response.json();\n\treturn json;\n}\n\nexport async function login(username, password) {\n\tconst response = await fetch(`${BASE_URL}/users/login`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\tbody: JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t}),\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function updatePost(post, token) {\n\tconst response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n\t\tmethod: \"PUT\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(post),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function updateBlock(block, token) {\n\tconst response = await fetch(\n\t\t`${BASE_URL}/posts/${block.post}/blocks/${block._id}`,\n\t\t{\n\t\t\tmethod: \"PUT\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(block),\n\t\t}\n\t);\n\treturn await getJSON(response);\n}\n\nexport async function getPost(ID) {\n\tconst response = await fetch(`${BASE_URL}/posts/${ID}`, {\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function createBlock(block, token) {\n\tconst response = await fetch(`${BASE_URL}/posts/${block.post}/blocks`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(block),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function deleteBlock(block, token) {\n\tconst response = await fetch(\n\t\t`${BASE_URL}/posts/${block.post}/blocks/${block._id}`,\n\t\t{\n\t\t\tmethod: \"DELETE\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t}\n\t);\n\treturn await getJSON(response);\n}\n\nexport async function getPosts() {\n\tconst response = await fetch(`${BASE_URL}/posts`, {\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function postPosts(post, token) {\n\tconst response = await fetch(`${BASE_URL}/posts`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(post),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function deletePosts(post, token) {\n\tconst response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n\t\tmethod: \"DELETE\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function createUser(user) {\n\tconst response = await fetch(`${BASE_URL}/users`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify(user),\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function updateUser(user, token) {\n\tconst response = await fetch(`${BASE_URL}/users/${user._id}`, {\n\t\tmethod: \"PUT\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(user),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function updatePostLikes(postId, userId) {\n\tconst response = await fetch(`${BASE_URL}/posts/${postId}/likes`, {\n\t\tmethod: \"PUT\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ user: userId }),\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n","import React, { useState } from \"react\";\nimport Block from \"./Block\";\nimport PostTitle from \"./PostTitle\";\nimport Author from \"./Author\";\nimport { createBlock, deleteBlock } from \"../backend/backend\";\nimport \"./Post.css\";\n\nconst Post = (props) => {\n  const { post, submit, updateBlock, errors, setPost, token, edit } = props;\n  const { _id, title, author, content } = post;\n\n  const NEW_EMPTY_BLOCK = {\n    text: \"New Block\",\n    type: \"paragraph\",\n    links: [],\n    language: \" \",\n    post: \"\",\n    errors: [],\n  };\n\n  const [newBlock, setNewBlock] = useState(NEW_EMPTY_BLOCK);\n\n  async function saveBlock(block) {\n    const newBlock = JSON.parse(JSON.stringify(block));\n    newBlock.post = _id;\n    const newPost = JSON.parse(JSON.stringify(post));\n    try {\n      const response = await createBlock(newBlock, token);\n      if (response.success) {\n        newPost.content.push(response.block);\n        setNewBlock(NEW_EMPTY_BLOCK);\n        newBlock.errors = [];\n      } else {\n        newBlock.errors = response.errors;\n      }\n    } catch (error) {\n      newBlock.errors = [{ msg: error.message }];\n    } finally {\n      if (newBlock.errors.length !== 0) setNewBlock(newBlock);\n      setPost(newPost);\n    }\n  }\n\n  async function remove(block) {\n    const newBlock = JSON.parse(JSON.stringify(block));\n    newBlock.post = _id;\n    const newPost = JSON.parse(JSON.stringify(post));\n    const index = newPost.content.findIndex(\n      (block) => block._id === newBlock._id\n    );\n    try {\n      const response = await deleteBlock(newBlock, token);\n      if (response.success) newPost.content.splice(index, 1);\n      else newBlock.errors = response.errors;\n    } catch (error) {\n      newBlock.errors = [{ msg: error.message }];\n    } finally {\n      if (newBlock.errors && newBlock.errors.length !== 0)\n        newPost.content[index] = newBlock;\n      setPost(newPost);\n    }\n  }\n\n  return (\n    <div className=\"post\">\n      <Author author={author} className=\"author\" />\n      <article>\n        <PostTitle title={title} edit={edit} submit={submit} errors={errors} />\n        {content.map((block) => (\n          <Block\n            key={block._id}\n            block={block}\n            edit={edit}\n            submit={updateBlock}\n            remove={remove}\n          />\n        ))}\n        {edit && (\n          <Block\n            key=\"new-block\"\n            block={newBlock}\n            edit={edit}\n            submit={saveBlock}\n          />\n        )}\n      </article>\n    </div>\n  );\n};\n\nexport default Post;\n","import \"./AppMenu.css\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst AppMenu = (props) => {\n  const LOGO = \"Alex73 DEV\";\n\n  const { loginSuccess } = props;\n\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li className=\"nav__logo\">\n          <Link to=\"/\">{LOGO}</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/post\">Post</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/signup\">{loginSuccess ? \"Update User\" : \"Sign Up\"}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default AppMenu;\n","import React from \"react\";\nimport Post from \"./Post\";\n\nconst About = (props) => {\n  const { post } = props;\n\n  return <Post post={post} edit={false} errors={[]} />;\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const {\n    variant,\n    headerTextLeft,\n    headerTextRight,\n    footerTextLeft,\n    footerTextRight,\n    children,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <div className={`card__header ${variant && variant}`}>\n        <div>{headerTextLeft}</div>\n        <div>{headerTextRight}</div>\n      </div>\n      {children}\n      <div className={`card__footer ${variant && `footer-${variant}`}`}>\n        <div>{footerTextLeft}</div>\n        <div>{footerTextRight}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./PostCard.css\";\n\nconst PostCard = (props) => {\n  const { post, onClick, edit, open, publish, user, like } = props;\n\n  const { title, author, createdAt, updatedAt, likes } = post;\n\n  const admin = user ? user.isAdmin : false;\n\n  const isPostLiked = user ? likes.indexOf(user._id) !== -1 : false;\n\n  return (\n    <Card\n      headerTextLeft={`By ${author.username}`}\n      headerTextRight={`Likes: ${likes.length}`}\n      footerTextLeft={`Created:${createdAt && createdAt.slice(0, 10)}`}\n      footerTextRight={`Updated:${updatedAt && updatedAt.slice(0, 10)}`}\n    >\n      <div className=\"post-card__body\">\n        <div className=\"post-card__title\">\n          <h2>{title}</h2>\n        </div>\n        <div className=\"post-card__button-container\">\n          <button className=\"post-card__button\" onClick={() => onClick(post)}>\n            View\n          </button>\n          {!edit && user && user._id && (\n            <button\n              className=\"post-card__button\"\n              onClick={() => like(post._id, user._id)}\n            >\n              {isPostLiked ? \"Unlike\" : \"Like\"}\n            </button>\n          )}\n          {edit && (\n            <button className=\"post-card__button\" onClick={() => publish(post)}>\n              {post.published ? \"Hide\" : \"Publish\"}\n            </button>\n          )}\n          {(edit || admin) && (\n            <button className=\"post-card__button--delete-lg\" onClick={open}>\n              Delete\n            </button>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React, { useState, useEffect } from \"react\";\nimport PostCard from \"./PostCard\";\nimport \"./PostsView.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PostsView = (props) => {\n  const { posts, setIndex, edit, open, publish, user, like } = props;\n\n  const navigate = useNavigate();\n\n  const [postIndex, setPostIndex] = useState(-1);\n\n  function getIndex(searchedPost) {\n    return posts.findIndex((post) => post._id === searchedPost._id);\n  }\n\n  function handleView(viewedPost) {\n    setPostIndex(getIndex(viewedPost));\n  }\n\n  useEffect(() => {\n    if (postIndex === -1) return;\n    setIndex(postIndex);\n    navigate(\"/post\");\n  }, [postIndex]);\n\n  return (\n    <div className=\"posts-view\">\n      {posts.map(\n        (post) =>\n          (post.published || edit) && (\n            <PostCard\n              key={post._id}\n              post={post}\n              onClick={handleView}\n              edit={edit}\n              open={() => {\n                setIndex(getIndex(post));\n                open();\n              }}\n              publish={publish}\n              user={user}\n              like={like}\n            />\n          )\n      )}\n    </div>\n  );\n};\n\nexport default PostsView;\n","import React from \"react\";\nimport \"./Posts.css\";\nimport PostsView from \"./PostsView\";\n\nconst Posts = (props) => {\n  const { posts, setIndex, open, user, like } = props;\n\n  return (\n    <div className=\"posts\">\n      <h1 className=\"posts__title\">Posts</h1>\n      <PostsView\n        posts={posts}\n        setIndex={setIndex}\n        open={open}\n        user={user}\n        like={like}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport PostsView from \"./PostsView\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = (props) => {\n  const {\n    submit,\n    loginState,\n    setLoginState,\n    posts,\n    logout,\n    setPostIndex,\n    setEdit,\n    open,\n    publish,\n  } = props;\n  const { user, msg } = loginState;\n\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    if (!loginState.success) return;\n    const newUserPosts = posts.filter(\n      (post) => post.author.username === loginState.user.username\n    );\n    setUserPosts(newUserPosts);\n  }, [loginState, posts]);\n\n  function handleChange(event) {\n    const name = event.target.id;\n    const newLoginState = JSON.parse(JSON.stringify(loginState));\n    newLoginState.user[name] = event.target.value;\n    setLoginState(newLoginState);\n  }\n\n  let jsx;\n  if (loginState.success) {\n    jsx = (\n      <div className=\"logout\">\n        <h1 className=\"logout__title\">Welcome {user.username}!</h1>\n        <PostsView\n          posts={userPosts}\n          setIndex={(index) => {\n            const postIndex = posts.findIndex(\n              (post) => post._id === userPosts[index]._id\n            );\n            setPostIndex(postIndex);\n            setEdit(true);\n          }}\n          edit={true}\n          open={open}\n          publish={publish}\n        />\n\n        <Link to=\"/new-post\" className=\"logout__button--link\">\n          New Post\n        </Link>\n\n        <p>You are currently logged in.</p>\n        <button type=\"button\" onClick={logout} className=\"logout__button\">\n          Logout\n        </button>\n      </div>\n    );\n  } else\n    jsx = (\n      <form\n        className=\"login\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          submit(loginState.user);\n        }}\n        validate=\"true\"\n      >\n        <h1 className=\"login__title\">Login</h1>\n        <label htmlFor=\"username\">Username*</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"login__username\"\n          onChange={handleChange}\n          value={user.username}\n          required\n        />\n        <label htmlFor=\"password\">Password*</label>\n        <input\n          type=\"text\"\n          id=\"password\"\n          className=\"login__password\"\n          onChange={handleChange}\n          value={user.password}\n          required\n        />\n        <button type=\"submit\" className=\"login__button\">\n          Login\n        </button>\n        {msg && <ErrorMsg msg={msg} />}\n      </form>\n    );\n  return jsx;\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./Signup.css\";\n\nconst Signup = (props) => {\n  const { loginState, submit, update, response, deleteErrors } = props;\n\n  const { user: currentUser, success: loginSuccess } = loginState;\n  const { success, errors } = response;\n\n  const [user, setUser] = useState(currentUser);\n\n  useEffect(() => {\n    return () => deleteErrors();\n  }, []);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!success) return;\n    navigate(\"/login\");\n  }, [success]);\n\n  function handleChange(event) {\n    const fieldInput = event.target;\n    const newUser = {\n      ...user,\n      [fieldInput.id]: fieldInput.value,\n    };\n    setUser(newUser);\n  }\n\n  return (\n    <form\n      className=\"signup\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        loginSuccess ? update(user) : submit(user);\n      }}\n      validate=\"true\"\n    >\n      <h1 className=\"signup__title\">\n        {loginSuccess ? \"Update User\" : \"Sign Up\"}\n      </h1>\n      <label htmlFor=\"username\">Username*</label>\n      <input\n        type=\"text\"\n        id=\"username\"\n        className=\"signup__username\"\n        onChange={handleChange}\n        value={user.username}\n        required\n      />\n      {!loginSuccess && <label htmlFor=\"password\">Password*</label>}\n      {!loginSuccess && (\n        <input\n          type=\"text\"\n          id=\"password\"\n          className=\"signup__password\"\n          onChange={handleChange}\n          value={user.password}\n          required\n        />\n      )}\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        className=\"signup__name\"\n        onChange={handleChange}\n        value={user.name}\n      />\n      <label htmlFor=\"jobTitle\">Job Title</label>\n      <input\n        type=\"text\"\n        id=\"jobTitle\"\n        className=\"signup__job-title\"\n        onChange={handleChange}\n        value={user.jobTitle}\n      />\n      <label htmlFor=\"bio\">Bio</label>\n      <textarea\n        name=\"bio\"\n        id=\"bio\"\n        cols=\"30\"\n        rows=\"10\"\n        className=\"submit_bio\"\n        onChange={handleChange}\n        value={user.bio}\n      />\n      <button type=\"submit\" className=\"signup__button\">\n        Submit\n      </button>\n      {errors &&\n        errors.length !== 0 &&\n        errors.map((error, index) => <ErrorMsg msg={error.msg} key={index} />)}\n    </form>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./NewPost.css\";\n\nconst NewPost = (props) => {\n  const { submit, response, deleteResponse } = props;\n  const { post, errors } = response;\n\n  const [title, setTitle] = useState(post.title);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (response.success) {\n      deleteResponse();\n      navigate(\"/login\");\n    } else {\n      setTitle(response.post.title);\n    }\n  }, [response]);\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function submitForm(event) {\n    event.preventDefault();\n    submit({ title: title });\n  }\n\n  return (\n    <form onSubmit={submitForm} className=\"new-post\">\n      <h1 className=\"new-post__title\">New Post</h1>\n      <label htmlFor=\"title\">Title*</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        required\n        onChange={handleTitleChange}\n        value={title}\n      />\n      <button type=\"submit\">Submit</button>\n      {errors.length > 0 && <ErrorMsg msg={errors[0].msg} />}\n    </form>\n  );\n};\n\nexport default NewPost;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./Modal.css\";\n\nconst Modal = (props) => {\n  const { show, variant, header, footer, children } = props;\n\n  return (\n    <div className={`modal ${show && \"show\"}`}>\n      <Card variant={variant} headerTextLeft={header} footerTextLeft={footer}>\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"./Modal\";\nimport ErrorMsg from \"./ErrorMsg\";\n\nconst ErrorDlg = (props) => {\n  const { open, close, error } = props;\n\n  return (\n    <Modal\n      variant=\"danger\"\n      header=\"Error!\"\n      footer=\"Sorry, but it happens sometimes\"\n      show={open}\n    >\n      <div className=\"modal-body\">\n        <ErrorMsg msg={error.msg} />\n        <div className=\"modal-body__button-container\">\n          <button className=\"modal-body__button\" onClick={close}>\n            OK\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ErrorDlg;\n","import React from \"react\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Post from \"./components/Post\";\nimport AppMenu from \"./components/AppMenu\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Posts from \"./components/Posts\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport NewPost from \"./components/NewPost\";\nimport Modal from \"./components/Modal\";\nimport ErrorMsg from \"./components/ErrorMsg\";\nimport {\n  login,\n  updatePost,\n  updateBlock,\n  getPosts,\n  postPosts,\n  deletePosts,\n  createUser,\n  updateUser,\n  updatePostLikes,\n} from \"./backend/backend\";\nimport ErrorDlg from \"./components/ErrorDlg\";\n\nfunction App() {\n  const ABOUT_ID = \"6404bca2160e826767e36aa3\";\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showErrorDlg, setShowErrorDlg] = useState(false);\n\n  const [index, setIndex] = useState(0);\n\n  const [edit, setEdit] = useState(false);\n\n  const [posts, setPosts] = useState([\n    {\n      title: \"...Loading\",\n      author: {\n        username: \"...Loading\",\n      },\n      content: [],\n    },\n  ]);\n\n  const [aboutPost, setAboutPost] = useState({\n    title: \"...Loading\",\n    author: {\n      username: \"...Loading\",\n    },\n    content: [],\n  });\n\n  const [postErrors, setPostErrors] = useState([]);\n\n  const [loginState, setLoginState] = useState({\n    success: false,\n    user: {\n      username: \"\",\n      password: \"\",\n      isAdmin: false,\n      name: \"\",\n      jobTitle: \"\",\n      bio: \"\",\n    },\n    token: \"\",\n    msg: \"\",\n  });\n\n  const EMPTY_RESPONSE = {\n    success: false,\n    type: \"POST\",\n    post: {\n      author: \"\",\n      title: \"\",\n    },\n    errors: [],\n  };\n\n  const [response, setResponse] = useState(EMPTY_RESPONSE);\n\n  const [publishError, setPublishError] = useState({ msg: \"\" });\n\n  const [signupResponse, setSignupResponse] = useState({\n    success: false,\n    errors: [],\n  });\n\n  useEffect(() => {\n    getPosts()\n      .then((response) => {\n        setPosts(response.posts);\n      })\n      .catch((error) => {\n        console.error(error.message);\n        openErrorDlg({ msg: error.message });\n      });\n    //get loginState from localStorage\n    const initialLoginState = JSON.parse(localStorage.getItem(\"loginState\"));\n    if (initialLoginState) setLoginState(initialLoginState);\n  }, []);\n\n  useEffect(() => {\n    const { success, type, post, errors } = response;\n    if (post.author === \"\" && post.title === \"\" && errors.length === 0) return;\n    if (type === \"POST\" && success) {\n      const newPosts = JSON.parse(JSON.stringify(posts));\n      post.author = { ...loginState.user };\n      newPosts.push(post);\n      setPosts(newPosts);\n    }\n    if (type === \"DELETE\" && success) {\n      const newPosts = JSON.parse(JSON.stringify(posts));\n      newPosts.splice(index, 1);\n      setPosts(newPosts);\n      setIndex(0);\n      deleteResponse();\n      closeModal();\n    }\n  }, [response]);\n\n  useEffect(() => {\n    const newAboutPost = posts.find((post) => post._id === ABOUT_ID);\n    if (!newAboutPost) return;\n    setAboutPost(newAboutPost);\n  }, [posts]);\n\n  async function onSubmit(loginForm) {\n    const { username, password } = loginForm;\n    try {\n      const response = await login(username, password);\n      const newLoginState = JSON.parse(JSON.stringify(loginState));\n      newLoginState.success = response.success;\n      newLoginState.msg = response.msg;\n      newLoginState.token = response.token;\n      if (response.success) {\n        //user logged in successfully\n        newLoginState.user = { ...response.user };\n        newLoginState.user.password = \"\"; //Do not store password as it is sensitive information!!!\n        //Store newLoginState, which contains the token, in localStorage\n        localStorage.setItem(\"loginState\", JSON.stringify(newLoginState));\n      }\n      setLoginState(newLoginState);\n    } catch (error) {\n      console.error(error);\n      const newLoginState = { ...loginState };\n      newLoginState.msg = error.message;\n      setLoginState(newLoginState);\n    }\n  }\n\n  function updateAuthorInPosts(author) {\n    const newPosts = JSON.parse(JSON.stringify(posts));\n    newPosts.forEach((post) => {\n      if (post.author._id === author._id) post.author = author;\n    });\n    setPosts(newPosts);\n  }\n\n  function handleUserErrors(user, errors) {\n    user._id = \"\";\n    user.isAdmin = false;\n    setLoginState({\n      success: false,\n      user,\n      errors: [],\n    });\n    setSignupResponse({\n      success: false,\n      errors,\n    });\n  }\n\n  async function submitUser(user) {\n    try {\n      const response = await createUser(user);\n      logout();\n      if (!response.success) {\n        handleUserErrors(user, response.errors);\n      } else {\n        setSignupResponse(response);\n        onSubmit(user);\n      }\n    } catch (error) {\n      handleUserErrors(user, [{ msg: error.message }]);\n    }\n  }\n\n  async function modifyUser(user) {\n    try {\n      const response = await updateUser(user, loginState.token);\n      setSignupResponse(response);\n      if (response.success) {\n        updateAuthorInPosts(user);\n        const newLoginState = JSON.parse(JSON.stringify(loginState));\n        newLoginState.user = user;\n        setLoginState(newLoginState);\n      }\n    } catch (error) {\n      setSignupResponse({\n        success: false,\n        errors: [{ msg: error.message }],\n      });\n    }\n  }\n\n  function logout() {\n    const newLoginState = {\n      success: false,\n      user: {\n        _id: \"\",\n        username: \"\",\n        password: \"\",\n      },\n      token: \"\",\n      msg: \"\",\n    };\n    localStorage.removeItem(\"loginState\");\n    setLoginState(newLoginState);\n  }\n\n  async function submitTitle(title) {\n    const newPosts = [...posts];\n    const newPost = { ...newPosts[index] };\n    newPost.title = title;\n    newPosts[index] = newPost;\n    setPosts(newPosts);\n    try {\n      const response = await updatePost(newPost, loginState.token);\n      setPostErrors(response.errors);\n    } catch (error) {\n      setPostErrors([{ msg: error.message }]);\n    }\n  }\n\n  async function submitBlock(block) {\n    const newPosts = JSON.parse(JSON.stringify(posts));\n    const newPost = { ...newPosts[index] };\n    const blockIndex = newPost.content.findIndex((bl) => bl._id === block._id);\n    newPost.content[blockIndex] = { ...block };\n    try {\n      const response = await updateBlock(block, loginState.token);\n      newPost.content[blockIndex].errors = response.errors;\n    } catch (error) {\n      newPost.content[blockIndex].errors = [{ msg: error.message }];\n    } finally {\n      setPosts(newPosts);\n    }\n  }\n\n  async function createPost(post) {\n    post.author = loginState.user._id;\n    try {\n      const response = await postPosts(post, loginState.token);\n      // The next line will deal with unauthorized access when response do not have post\n      if (!response.post) response.post = post;\n      setResponse({\n        ...response,\n        type: \"POST\",\n      });\n    } catch (error) {\n      setResponse({\n        success: false,\n        type: \"POST\",\n        post,\n        errors: [{ msg: error.message }],\n      });\n    }\n  }\n\n  async function erasePost(post) {\n    try {\n      const response = await deletePosts(post, loginState.token);\n      setResponse({\n        ...response,\n        post,\n        type: \"DELETE\",\n      });\n    } catch (error) {\n      setResponse({\n        success: false,\n        type: \"DELETE\",\n        post,\n        errors: [{ msg: error.message }],\n      });\n    }\n  }\n\n  async function togglePublish(post) {\n    post.published = !post.published;\n    try {\n      const response = await updatePost(post, loginState.token);\n      if (response.success) {\n        const newPosts = JSON.parse(JSON.stringify(posts));\n        const newPost = newPosts.find((newPost) => newPost._id === post._id);\n        newPost.published = post.published;\n        setPosts(newPosts);\n      } else {\n        throw new Error(response.errors[0].msg);\n      }\n    } catch (error) {\n      openErrorDlg({ msg: error.message });\n    }\n  }\n\n  async function toggleLike(postId, userId) {\n    try {\n      const response = await updatePostLikes(postId, userId);\n      if (response.success) {\n        const newPosts = JSON.parse(JSON.stringify(posts));\n        const newPost = newPosts.find((newPost) => newPost._id === postId);\n        const likeIndex = newPost.likes.indexOf(userId);\n        const isPostLiked = likeIndex !== -1;\n        if (!isPostLiked) newPost.likes.push(userId);\n        else newPost.likes.splice(likeIndex, 1);\n        setPosts(newPosts);\n      } else {\n        throw new Error(response.errors[0].msg);\n      }\n    } catch (error) {\n      openErrorDlg({ msg: error.message });\n    }\n  }\n\n  function deleteResponse() {\n    setResponse(EMPTY_RESPONSE);\n  }\n\n  function deleteErrors() {\n    setSignupResponse({\n      success: false,\n      errors: [],\n    });\n  }\n\n  function openModal() {\n    setShowModal(true);\n  }\n\n  function closeModal() {\n    setShowModal(false);\n  }\n\n  function openErrorDlg(error) {\n    setPublishError(error);\n    setShowErrorDlg(true);\n  }\n\n  function closeErrorDlg() {\n    setPublishError({ msg: \"\" });\n    setShowErrorDlg(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppMenu loginSuccess={loginState.success} />\n        <Routes>\n          <Route\n            path=\"/post\"\n            element={\n              <Post\n                post={posts[index]}\n                submit={submitTitle}\n                updateBlock={submitBlock}\n                errors={postErrors}\n                setPost={(newPost) => {\n                  const modifiedPosts = [...posts];\n                  modifiedPosts[index] = newPost;\n                  setPosts(modifiedPosts);\n                }}\n                token={loginState.token}\n                edit={\n                  edit &&\n                  loginState.user.username === posts[index].author.username\n                }\n              />\n            }\n          />\n          <Route path=\"/about\" element={<About post={aboutPost} />} />\n          <Route\n            path=\"/\"\n            element={\n              <Posts\n                posts={posts}\n                setIndex={(ind) => {\n                  setIndex(ind);\n                  setEdit(false);\n                }}\n                user={loginState.user}\n                open={openModal}\n                publish={togglePublish}\n                like={toggleLike}\n              />\n            }\n          />\n          <Route\n            path=\"/login\"\n            element={\n              <Login\n                submit={onSubmit}\n                loginState={loginState}\n                setLoginState={setLoginState}\n                logout={logout}\n                posts={posts}\n                setPostIndex={setIndex}\n                setEdit={setEdit}\n                open={openModal}\n                publish={togglePublish}\n              />\n            }\n          />\n          <Route\n            path=\"/signup\"\n            element={\n              <Signup\n                loginState={loginState}\n                submit={submitUser}\n                update={modifyUser}\n                response={signupResponse}\n                deleteErrors={deleteErrors}\n              />\n            }\n          />\n          <Route\n            path=\"/new-post\"\n            element={\n              <NewPost\n                submit={createPost}\n                response={response}\n                deleteResponse={deleteResponse}\n              />\n            }\n          />\n        </Routes>\n      </Router>\n\n      <Modal\n        show={showModal}\n        variant=\"danger\"\n        header=\"Danger!\"\n        footer=\"Permanent data loss\"\n      >\n        <div className=\"modal-body\">\n          {response.errors.length === 0 && (\n            <p>You are going to delete the post permanently. Are you sure?</p>\n          )}\n          {response.errors.length !== 0 && (\n            <ErrorMsg msg={response.errors[0].msg} />\n          )}\n          <div className=\"modal-body__button-container\">\n            <button\n              type=\"button\"\n              onClick={() => erasePost(posts[index])}\n              className=\"modal-body__button--delete\"\n            >\n              Delete\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                deleteResponse();\n                closeModal();\n              }}\n              className=\"modal-body__button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </Modal>\n\n      <ErrorDlg\n        open={showErrorDlg}\n        close={closeErrorDlg}\n        error={publishError}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}